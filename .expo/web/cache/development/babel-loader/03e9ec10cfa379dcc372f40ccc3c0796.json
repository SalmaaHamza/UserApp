{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { VStack, Input, Box, Icon } from \"native-base\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { useState } from 'react';\nimport { searchByName } from \"../actions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (function () {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      searchText = _useState2[0],\n      setSearchText = _useState2[1];\n\n  var resolve = function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.t0 = dispatch;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(searchByName(text));\n\n          case 3:\n            _context.t1 = _context.sent;\n            (0, _context.t0)(_context.t1);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var handleTextChange = function handleTextChange() {\n    var text = e.target.Value;\n    setSearchText(text);\n\n    if (text.length > 3) {\n      resolve();\n      dispatch({\n        ty: ty\n      });\n    }\n  };\n\n  return _jsx(Box, {\n    children: _jsx(VStack, {\n      w: \"100%\",\n      space: 5,\n      alignSelf: \"center\",\n      children: _jsx(Input, {\n        value: searchText,\n        onChange: handleTextChange,\n        placeholder: \"Search\",\n        variant: \"filled\",\n        width: \"100%\",\n        borderRadius: \"10\",\n        py: \"1\",\n        px: \"2\",\n        borderWidth: \"0\",\n        InputLeftElement: _jsx(Icon, {\n          ml: \"2\",\n          size: \"4\",\n          color: \"gray.400\",\n          as: _jsx(Ionicons, {\n            name: \"ios-search\"\n          })\n        })\n      })\n    })\n  });\n});","map":{"version":3,"sources":["D:/ITI_Data/Coursers/React Native/D03/Demos-20220601T204856Z-001/Demos/src/components/search.jsx"],"names":["VStack","Input","Box","Icon","Ionicons","useState","searchByName","searchText","setSearchText","resolve","dispatch","text","handleTextChange","e","target","Value","length","ty"],"mappings":";;AAAA,SAASA,MAAT,EAAiBC,KAAjB,EAAwBC,GAAxB,EAA6BC,IAA7B,QAAyC,aAAzC;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,YAAT;;AACA,gBAAe,YAAM;AACnB,kBAAoCD,QAAQ,CAAC,EAAD,CAA5C;AAAA;AAAA,MAAOE,UAAP;AAAA,MAAmBC,aAAnB;;AACA,MAAMC,OAAO,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA,0BACdC,QADc;AAAA;AAAA,6CACCJ,YAAY,CAACK,IAAD,CADb;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAGA,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7B,QAAID,IAAI,GAAGE,CAAC,CAACC,MAAF,CAASC,KAApB;AACAP,IAAAA,aAAa,CAACG,IAAD,CAAb;;AACA,QAAIA,IAAI,CAACK,MAAL,GAAc,CAAlB,EACA;AACEP,MAAAA,OAAO;AACbC,MAAAA,QAAQ,CAAC;AAACO,QAAAA,EAAE,EAAFA;AAAD,OAAD,CAAR;AACK;AACF,GARD;;AASA,SACE,KAAC,GAAD;AAAA,cACE,KAAC,MAAD;AAAQ,MAAA,CAAC,EAAC,MAAV;AAAiB,MAAA,KAAK,EAAE,CAAxB;AAA2B,MAAA,SAAS,EAAC,QAArC;AAAA,gBACE,KAAC,KAAD;AACE,QAAA,KAAK,EAAEV,UADT;AAEE,QAAA,QAAQ,EAAEK,gBAFZ;AAGE,QAAA,WAAW,EAAC,QAHd;AAIE,QAAA,OAAO,EAAC,QAJV;AAKE,QAAA,KAAK,EAAC,MALR;AAME,QAAA,YAAY,EAAC,IANf;AAOE,QAAA,EAAE,EAAC,GAPL;AAQE,QAAA,EAAE,EAAC,GARL;AASE,QAAA,WAAW,EAAC,GATd;AAUE,QAAA,gBAAgB,EACd,KAAC,IAAD;AACE,UAAA,EAAE,EAAC,GADL;AAEE,UAAA,IAAI,EAAC,GAFP;AAGE,UAAA,KAAK,EAAC,UAHR;AAIE,UAAA,EAAE,EAAE,KAAC,QAAD;AAAU,YAAA,IAAI,EAAC;AAAf;AAJN;AAXJ;AADF;AADF,IADF;AAyBD,CAvCD","sourcesContent":["import { VStack, Input, Box, Icon } from \"native-base\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport { useState } from 'react';\r\nimport { searchByName } from \"../actions\";\r\nexport default () => {\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const resolve = async () => {\r\n    dispatch(await searchByName(text));\r\n  };\r\n  const handleTextChange = () => {\r\n    let text = e.target.Value;\r\n    setSearchText(text);\r\n    if (text.length > 3)\r\n    {\r\n      resolve();\r\ndispatch({ty})\r\n    }\r\n  }\r\n  return (\r\n    <Box>\r\n      <VStack w=\"100%\" space={5} alignSelf=\"center\">\r\n        <Input\r\n          value={searchText}\r\n          onChange={handleTextChange}\r\n          placeholder=\"Search\"\r\n          variant=\"filled\"\r\n          width=\"100%\"\r\n          borderRadius=\"10\"\r\n          py=\"1\"\r\n          px=\"2\"\r\n          borderWidth=\"0\"\r\n          InputLeftElement={\r\n            <Icon\r\n              ml=\"2\"\r\n              size=\"4\"\r\n              color=\"gray.400\"\r\n              as={<Ionicons name=\"ios-search\" />}\r\n            />\r\n          }\r\n        />\r\n      </VStack>\r\n    </Box>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}