{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { createContext, useState, useReducer } from \"react\";\nimport { usersReducer } from \"../reducers/users-reducer\";\nimport rootReducer from \"../reducers\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var usersContext = createContext();\nexport var UsersProvider = function UsersProvider(_ref) {\n  var children = _ref.children;\n\n  var _useReducer = useReducer(rootReducer, {\n    users: {\n      list: [],\n      details: null\n    }\n  }),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  return _jsx(usersContext.Provider, {\n    value: {\n      state: state,\n      dispatch: dispatch\n    },\n    children: children\n  });\n};","map":{"version":3,"sources":["D:/ITI_Data/Coursers/React Native/D03/Demos-20220601T204856Z-001/Demos/src/context/index.js"],"names":["createContext","useState","useReducer","usersReducer","rootReducer","usersContext","UsersProvider","children","users","list","details","state","dispatch"],"mappings":";AAAA,SAASA,aAAT,EAAwBC,QAAxB,EAAkCC,UAAlC,QAAoD,OAApD;AACA,SAASC,YAAT;AACA,OAAOC,WAAP;;AACA,OAAO,IAAMC,YAAY,GAAGL,aAAa,EAAlC;AAEP,OAAO,IAAMM,aAAa,GAAG,SAAhBA,aAAgB,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAE7C,oBAA0BL,UAAU,CAACE,WAAD,EAAc;AAChDI,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAE,EADD;AAELC,MAAAA,OAAO,EAAE;AAFJ;AADyC,GAAd,CAApC;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAcC,QAAd;;AAMA,SACE,KAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAED,MAAAA,KAAK,EAALA,KAAF;AAASC,MAAAA,QAAQ,EAARA;AAAT,KAA9B;AAAA,cACGL;AADH,IADF;AAKD,CAbM","sourcesContent":["import { createContext, useState, useReducer } from \"react\";\r\nimport { usersReducer } from \"../reducers/users-reducer\";\r\nimport rootReducer from '../reducers'\r\nexport const usersContext = createContext();\r\n\r\nexport const UsersProvider = ({ children }) => {\r\n  // const [state,setState] = useState(['Mohamed','Ahmed','Sara']);\r\n  const [state, dispatch] = useReducer(rootReducer, {\r\n    users: {\r\n      list: [],\r\n      details: null,\r\n    }\r\n  });\r\n  return (\r\n    <usersContext.Provider value={{ state, dispatch }}>\r\n      {children}\r\n    </usersContext.Provider>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}