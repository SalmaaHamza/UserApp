{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { Box, Text, Button, Heading, FlatList, HStack, ArrowForwardIcon } from 'native-base';\nimport { useContext, useEffect } from 'react';\nimport { usersContext } from \"../context\";\nimport { getUsersList } from \"../actions\";\nimport Search from \"./search\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var Home = function Home(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(usersContext),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch;\n\n  var resolve = function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.t0 = dispatch;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(getUsersList());\n\n          case 3:\n            _context.t1 = _context.sent;\n            (0, _context.t0)(_context.t1);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    resolve();\n  }, []);\n  return _jsxs(Box, {\n    children: [_jsx(Heading, {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Users List\"\n    }), _jsx(Button, {\n      onPress: function onPress() {\n        navigation.navigate('camera');\n      },\n      children: \"Go to Camera\"\n    }), _jsx(FlatList, {\n      data: state.users.list || [],\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        return _jsx(Box, {\n          borderBottomWidth: \"1\",\n          _dark: {\n            borderColor: \"gray.600\"\n          },\n          borderColor: \"coolGray.200\",\n          pl: \"4\",\n          pr: \"5\",\n          py: \"2\",\n          children: _jsxs(HStack, {\n            style: {\n              justifyContent: 'space-between'\n            },\n            children: [_jsx(Text, {\n              children: item.name\n            }), _jsx(ArrowForwardIcon, {\n              onPress: function onPress() {\n                navigation.navigate('Profile', {\n                  id: item.id\n                });\n              }\n            })]\n          })\n        });\n      },\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      }\n    })]\n  });\n};","map":{"version":3,"sources":["D:/ITI_Data/Coursers/React Native/D03/Demos-20220601T204856Z-001/Demos/src/components/home.jsx"],"names":["Box","Text","Button","Heading","FlatList","HStack","ArrowForwardIcon","useContext","useEffect","usersContext","getUsersList","Search","Home","navigation","state","dispatch","resolve","textAlign","navigate","users","list","item","borderColor","justifyContent","name","id"],"mappings":";AAAA,SAAQA,GAAR,EAAYC,IAAZ,EAAiBC,MAAjB,EAAwBC,OAAxB,EAAgCC,QAAhC,EAAyCC,MAAzC,EAAgDC,gBAAhD,QAAuE,aAAvE;AACA,SAASC,UAAT,EAAoBC,SAApB,QAAqC,OAArC;AACA,SAAQC,YAAR;AACA,SAASC,YAAT;AACA,OAAQC,MAAR;;;AACA,OAAO,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAgB;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AAChC,oBAAyBN,UAAU,CAACE,YAAD,CAAnC;AAAA,MAAOK,KAAP,eAAOA,KAAP;AAAA,MAAaC,QAAb,eAAaA,QAAb;;AAIA,MAAMC,OAAO,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA,0BACZD,QADY;AAAA;AAAA,6CACGL,YAAY,EADf;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAGAF,EAAAA,SAAS,CAAC,YAAI;AACVQ,IAAAA,OAAO;AACV,GAFQ,EAEP,EAFO,CAAT;AAIA,SAAO,MAAC,GAAD;AAAA,eACH,KAAC,OAAD;AAAS,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAC;AAAX,OAAhB;AAAA;AAAA,MADG,EAIH,KAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,mBAAI;AAACJ,QAAAA,UAAU,CAACK,QAAX,CAAoB,QAApB;AAA8B,OAApD;AAAA;AAAA,MAJG,EASH,KAAC,QAAD;AACA,MAAA,IAAI,EAAEJ,KAAK,CAACK,KAAN,CAAYC,IAAZ,IAAkB,EADxB;AAEA,MAAA,UAAU,EAAE,2BAAU;AAAA,YAARC,IAAQ,SAARA,IAAQ;AAClB,eACI,KAAC,GAAD;AAAK,UAAA,iBAAiB,EAAC,GAAvB;AAA2B,UAAA,KAAK,EAAE;AAC9BC,YAAAA,WAAW,EAAE;AADiB,WAAlC;AAEK,UAAA,WAAW,EAAC,cAFjB;AAEgC,UAAA,EAAE,EAAC,GAFnC;AAEuC,UAAA,EAAE,EAAC,GAF1C;AAE8C,UAAA,EAAE,EAAC,GAFjD;AAAA,oBAGM,MAAC,MAAD;AAAQ,YAAA,KAAK,EAAE;AAACC,cAAAA,cAAc,EAAC;AAAhB,aAAf;AAAA,uBACO,KAAC,IAAD;AAAA,wBACMF,IAAI,CAACG;AADX,cADP,EAII,KAAC,gBAAD;AAAkB,cAAA,OAAO,EAAE,mBAAI;AAC3BX,gBAAAA,UAAU,CAACK,QAAX,CAAoB,SAApB,EAA8B;AAACO,kBAAAA,EAAE,EAACJ,IAAI,CAACI;AAAT,iBAA9B;AACH;AAFD,cAJJ;AAAA;AAHN,UADJ;AAcH,OAjBD;AAkBA,MAAA,YAAY,EAAE,sBAACJ,IAAD;AAAA,eAAQA,IAAI,CAACI,EAAb;AAAA;AAlBd,MATG;AAAA,IAAP;AAgCH,CA5CM","sourcesContent":["import {Box,Text,Button,Heading,FlatList,HStack,ArrowForwardIcon} from 'native-base';\r\nimport { useContext,useEffect } from 'react';\r\nimport {usersContext} from '../context'\r\nimport { getUsersList } from '../actions';\r\nimport  Search  from \"./search\";\r\nexport const Home = ({navigation})=>{\r\n    const {state,dispatch} = useContext(usersContext);\r\n\r\n\r\n\r\n    const resolve = async ()=>{\r\n        dispatch(await getUsersList());\r\n    }\r\n    useEffect(()=>{\r\n        resolve()\r\n    },[])\r\n\r\n    return <Box>\r\n        <Heading style={{textAlign:'center'}}>\r\n                Users List\r\n        </Heading>\r\n        <Button onPress={()=>{navigation.navigate('camera')}}>\r\n            Go to Camera\r\n        </Button>\r\n        {/* <Search/> */}\r\n\r\n        <FlatList\r\n        data={state.users.list||[]}\r\n        renderItem={({item})=>{\r\n            return (\r\n                <Box borderBottomWidth=\"1\" _dark={{\r\n                    borderColor: \"gray.600\"\r\n                  }} borderColor=\"coolGray.200\" pl=\"4\" pr=\"5\" py=\"2\">\r\n                      <HStack style={{justifyContent:'space-between'}}>\r\n                             <Text>\r\n                                  {item.name}\r\n                            </Text>\r\n                          <ArrowForwardIcon onPress={()=>{\r\n                              navigation.navigate('Profile',{id:item.id})\r\n                          }}/>\r\n                      </HStack>\r\n                </Box>\r\n            )\r\n        }}\r\n        keyExtractor={(item)=>item.id}\r\n/>\r\n\r\n    </Box>\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}