{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { Box, Text, Button, Heading, FlatList, HStack, ArrowForwardIcon } from \"native-base\";\nimport { useContext, useEffect } from \"react\";\nimport { usersContext } from \"../context\";\nimport { getUsersList } from \"../actions\";\nimport SearchBar from \"./search\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var Home = function Home(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(usersContext),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch;\n\n  var resolve = function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.t0 = dispatch;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(getUsersList());\n\n          case 3:\n            _context.t1 = _context.sent;\n            (0, _context.t0)(_context.t1);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    resolve();\n  }, []);\n  return _jsxs(Box, {\n    children: [_jsx(Heading, {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"Users List\"\n    }), _jsx(Button, {\n      onPress: function onPress() {\n        navigation.navigate(\"camera\");\n      },\n      children: \"Go to Camera\"\n    }), _jsx(SearchBar, {}), _jsx(FlatList, {\n      data: state.users.list || [],\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        return _jsx(Box, {\n          borderBottomWidth: \"1\",\n          _dark: {\n            borderColor: \"gray.600\"\n          },\n          borderColor: \"coolGray.200\",\n          pl: \"4\",\n          pr: \"5\",\n          py: \"2\",\n          children: _jsxs(HStack, {\n            style: {\n              justifyContent: \"space-between\"\n            },\n            children: [_jsx(Text, {\n              children: item.name\n            }), _jsx(ArrowForwardIcon, {\n              onPress: function onPress() {\n                navigation.navigate(\"Profile\", {\n                  id: item.id\n                });\n              }\n            })]\n          })\n        });\n      },\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      }\n    })]\n  });\n};","map":{"version":3,"sources":["D:/ITI_Data/Coursers/React Native/D03/Demos-20220601T204856Z-001/Demos/src/components/home.jsx"],"names":["Box","Text","Button","Heading","FlatList","HStack","ArrowForwardIcon","useContext","useEffect","usersContext","getUsersList","SearchBar","Home","navigation","state","dispatch","resolve","textAlign","navigate","users","list","item","borderColor","justifyContent","name","id"],"mappings":";AAAA,SACEA,GADF,EAEEC,IAFF,EAGEC,MAHF,EAIEC,OAJF,EAKEC,QALF,EAMEC,MANF,EAOEC,gBAPF,QAQO,aARP;AASA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,OAAtC;AACA,SAASC,YAAT;AACA,SAASC,YAAT;AACA,OAAQC,SAAR;;;AACA,OAAO,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AACtC,oBAA4BN,UAAU,CAACE,YAAD,CAAtC;AAAA,MAAQK,KAAR,eAAQA,KAAR;AAAA,MAAeC,QAAf,eAAeA,QAAf;;AAEA,MAAMC,OAAO,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA,0BACdD,QADc;AAAA;AAAA,6CACCL,YAAY,EADb;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAGAF,EAAAA,SAAS,CAAC,YAAM;AACdQ,IAAAA,OAAO;AACR,GAFQ,EAEN,EAFM,CAAT;AAIA,SACE,MAAC,GAAD;AAAA,eACE,KAAC,OAAD;AAAS,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAhB;AAAA;AAAA,MADF,EAEE,KAAC,MAAD;AACE,MAAA,OAAO,EAAE,mBAAM;AACbJ,QAAAA,UAAU,CAACK,QAAX,CAAoB,QAApB;AACD,OAHH;AAAA;AAAA,MAFF,EASE,KAAC,SAAD,KATF,EAWE,KAAC,QAAD;AACE,MAAA,IAAI,EAAEJ,KAAK,CAACK,KAAN,CAAYC,IAAZ,IAAoB,EAD5B;AAEE,MAAA,UAAU,EAAE,2BAAc;AAAA,YAAXC,IAAW,SAAXA,IAAW;AACxB,eACE,KAAC,GAAD;AACE,UAAA,iBAAiB,EAAC,GADpB;AAEE,UAAA,KAAK,EAAE;AACLC,YAAAA,WAAW,EAAE;AADR,WAFT;AAKE,UAAA,WAAW,EAAC,cALd;AAME,UAAA,EAAE,EAAC,GANL;AAOE,UAAA,EAAE,EAAC,GAPL;AAQE,UAAA,EAAE,EAAC,GARL;AAAA,oBAUE,MAAC,MAAD;AAAQ,YAAA,KAAK,EAAE;AAAEC,cAAAA,cAAc,EAAE;AAAlB,aAAf;AAAA,uBACE,KAAC,IAAD;AAAA,wBAAOF,IAAI,CAACG;AAAZ,cADF,EAEE,KAAC,gBAAD;AACE,cAAA,OAAO,EAAE,mBAAM;AACbX,gBAAAA,UAAU,CAACK,QAAX,CAAoB,SAApB,EAA+B;AAAEO,kBAAAA,EAAE,EAAEJ,IAAI,CAACI;AAAX,iBAA/B;AACD;AAHH,cAFF;AAAA;AAVF,UADF;AAqBD,OAxBH;AAyBE,MAAA,YAAY,EAAE,sBAACJ,IAAD;AAAA,eAAUA,IAAI,CAACI,EAAf;AAAA;AAzBhB,MAXF;AAAA,IADF;AAyCD,CAnDM","sourcesContent":["import {\r\n  Box,\r\n  Text,\r\n  Button,\r\n  Heading,\r\n  FlatList,\r\n  HStack,\r\n  ArrowForwardIcon,\r\n} from \"native-base\";\r\nimport { useContext, useEffect } from \"react\";\r\nimport { usersContext } from \"../context\";\r\nimport { getUsersList } from \"../actions\";\r\nimport  SearchBar  from \"./search\";\r\nexport const Home = ({ navigation }) => {\r\n  const { state, dispatch } = useContext(usersContext);\r\n\r\n  const resolve = async () => {\r\n    dispatch(await getUsersList());\r\n  };\r\n  useEffect(() => {\r\n    resolve();\r\n  }, []);\r\n\r\n  return (\r\n    <Box>\r\n      <Heading style={{ textAlign: \"center\" }}>Users List</Heading>\r\n      <Button\r\n        onPress={() => {\r\n          navigation.navigate(\"camera\");\r\n        }}\r\n      >\r\n        Go to Camera\r\n      </Button>\r\n      <SearchBar />\r\n\r\n      <FlatList\r\n        data={state.users.list || []}\r\n        renderItem={({ item }) => {\r\n          return (\r\n            <Box\r\n              borderBottomWidth=\"1\"\r\n              _dark={{\r\n                borderColor: \"gray.600\",\r\n              }}\r\n              borderColor=\"coolGray.200\"\r\n              pl=\"4\"\r\n              pr=\"5\"\r\n              py=\"2\"\r\n            >\r\n              <HStack style={{ justifyContent: \"space-between\" }}>\r\n                <Text>{item.name}</Text>\r\n                <ArrowForwardIcon\r\n                  onPress={() => {\r\n                    navigation.navigate(\"Profile\", { id: item.id });\r\n                  }}\r\n                />\r\n              </HStack>\r\n            </Box>\r\n          );\r\n        }}\r\n        keyExtractor={(item) => item.id}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}